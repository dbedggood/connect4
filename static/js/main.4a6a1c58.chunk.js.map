{"version":3,"sources":["components/Square.js","components/Column.js","functions/calcWinner.js","components/Board.js","index.js","resources/c4r.png","resources/c4y.png"],"names":["Square","props","coin","value","react_default","a","createElement","src","alt","className","Column","onClick","components_Square","calcWinner","game","lastMove","colour","column","row","borderedGame","slice","gap","i","length","concat","border","Array","fill","push","unshift","count","red","redCoin","yellow","yellowCoin","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","columns","map","winner","colNum","_this2","newCols","lastPlayer","level","filter","x","setState","_this3","components_Column","handleClick","_this4","renderColumn","React","Component","Game","components_Board","ReactDOM","render","src_Game","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4a6a1c58.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Square(props) {\r\n  const coin = props.value ? <img src={props.value} alt=\"coin\"/> : null\r\n  return(\r\n    <div className='square unselectable'>\r\n      <div className='circle'>{coin}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Square","import React from 'react'\r\nimport Square from './Square'\r\n\r\nfunction Column(props) {\r\n    return(\r\n        <div className='column' onClick={() => props.onClick()}>\r\n            <Square value={props.value[5]} />\r\n            <Square value={props.value[4]} />\r\n            <Square value={props.value[3]} />\r\n            <Square value={props.value[2]} />\r\n            <Square value={props.value[1]} />\r\n            <Square value={props.value[0]} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column","function calcWinner(game, lastMove) {\r\n\r\n    const colour = lastMove[0]\r\n    const column = lastMove[1] + 3\r\n    const row = lastMove[2] + 3\r\n\r\n    let borderedGame = game.slice()\r\n    const gap = [null, null, null]\r\n    \r\n    for (let i=0; i < borderedGame.length; i++) {\r\n      borderedGame[i] = gap.concat(borderedGame[i]).concat(gap)\r\n    }\r\n\r\n    const border = new Array(borderedGame[0].length).fill(null)\r\n    borderedGame.push(border, border, border)\r\n    borderedGame.unshift(border, border, border)\r\n\r\n    let count = 0\r\n\r\n    // Horizontal Win Check\r\n    for (let i = -3; i < 4; i++) {\r\n      if (borderedGame[column + i][row] === colour) {\r\n        count++\r\n\r\n        if (count >=4) {\r\n          return colour\r\n        }\r\n\r\n      } else {\r\n        count = 0\r\n      }\r\n    }\r\n\r\n    // Vertical Win Check\r\n    for (let i = -3; i < 4; i++) {\r\n      if (borderedGame[column][row + i] === colour) {\r\n        count++\r\n\r\n        if (count >=4) {\r\n            return colour\r\n        }\r\n\r\n      } else {\r\n        count = 0\r\n      }\r\n    }\r\n\r\n    // Diagonal (Bottom Left -> Top Right) Win Check\r\n    for (let i = -3; i < 4; i++) {\r\n      if (borderedGame[column + i][row + i] === colour) {\r\n        count++\r\n\r\n        if (count >=4) {\r\n            return colour\r\n        }\r\n\r\n      } else {\r\n        count = 0\r\n      }\r\n    }\r\n\r\n    // Diagonal (Top Left -> Bottom Right) Win Check\r\n    for (let i = -3; i < 4; i++) {\r\n      if (borderedGame[column + i][row - i] === colour) {\r\n        count++\r\n\r\n        if (count >=4) {\r\n          return colour\r\n        }\r\n\r\n      } else {\r\n        count = 0\r\n      }\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default calcWinner","import React from \"react\"\r\nimport Column from './Column'\r\nimport calcWinner from '../functions/calcWinner'\r\nimport redCoin from \"../resources/c4r.png\"\r\nimport yellowCoin from \"../resources/c4y.png\"\r\n\r\nconst red = redCoin\r\nconst yellow = yellowCoin\r\n\r\nclass Board extends React.Component {\r\n  \r\n  constructor(props) {\r\n\r\n    super(props)\r\n\r\n    this.state = {\r\n      columns: new Array(7).fill(0).map(() => new Array(6).fill(null)),\r\n      lastMove: [yellow, null, null],\r\n      winner: null\r\n    }\r\n\r\n  }\r\n\r\n  handleClick(colNum) {\r\n    if (this.state.winner === null) {\r\n      \r\n      const newCols = this.state.columns.slice()\r\n      let lastPlayer = this.state.lastMove[0]\r\n\r\n      const level = newCols[colNum].filter(x => x !== null).length\r\n      if (level >= 6) {return}\r\n\r\n      lastPlayer = lastPlayer === red? yellow : red\r\n\r\n      newCols[colNum][level] = lastPlayer\r\n\r\n      this.setState({\r\n          columns: newCols,\r\n          lastMove: [lastPlayer, colNum, level]\r\n        }, \r\n        () => {this.setState({winner: calcWinner(this.state.columns, this.state.lastMove)})}\r\n      )\r\n\r\n    } else {\r\n      return\r\n    }\r\n\r\n  }\r\n\r\n  renderColumn(colNum) {\r\n\r\n    return (\r\n      <Column \r\n        value={this.state.columns[colNum]}\r\n        onClick={() => this.handleClick(colNum)}\r\n       />\r\n    )\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"game-board\">\r\n          {this.renderColumn(0)}\r\n          {this.renderColumn(1)}\r\n          {this.renderColumn(2)}\r\n          {this.renderColumn(3)}\r\n          {this.renderColumn(4)}\r\n          {this.renderColumn(5)}\r\n          {this.renderColumn(6)}\r\n        </div>\r\n        <div>\r\n          <p className={this.state.winner === null ? 'status' : 'status hidden'}>\r\n            Next Turn: <img src={this.state.lastMove[0] === red ? yellow : red} alt='coin' /> \r\n          </p>\r\n\r\n          <p className={this.state.winner !== null ? 'status' : 'status hidden'}>\r\n            Winner: <img src={this.state.winner} alt='coin' /> \r\n          </p>\r\n\r\n          <div className='button' onClick={() => {\r\n            this.setState({\r\n              columns: new Array(7).fill(0).map(() => new Array(6).fill(null)),\r\n              lastMove: [yellow, null, null],\r\n              winner: null\r\n          })\r\n          }}>\r\n            Restart\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport './index.css'\r\nimport Board from \"./components/Board\";\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\"game\">\r\n          <Board />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);","module.exports = __webpack_public_path__ + \"static/media/c4r.90fdc204.png\";","module.exports = __webpack_public_path__ + \"static/media/c4y.7d207dc0.png\";"],"sourceRoot":""}